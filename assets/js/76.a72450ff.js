(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{435:function(e,v,_){"use strict";_.r(v);var t=_(33),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"一句话说明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一句话说明"}},[e._v("#")]),e._v(" 一句话说明")]),e._v(" "),_("h2",{attrs:{id:"keep-alive"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[e._v("#")]),e._v(" keep-alive")]),e._v(" "),_("p",[_("code",[e._v("keep-alive")]),e._v("是 Vue 内置的一个组件，可以实现组件缓存，当组件切换时不会对当前组件进行卸载。")]),e._v(" "),_("p",[_("code",[e._v("activated")]),e._v("和"),_("code",[e._v("deactivated")]),e._v("两个生命周期, 将会在"),_("code",[e._v("<keep-alive>")]),e._v("树内的所有嵌套组件中触发, 用来得知当前组件是否处于活跃状态。")]),e._v(" "),_("ul",[_("li",[e._v("include - 字符串或正则表达式。只有名称匹配的组件会被缓存。")]),e._v(" "),_("li",[e._v("exclude - 字符串或正则表达式。任何名称匹配的组件都不会被缓存。")]),e._v(" "),_("li",[e._v("max - 数字。最多可以缓存多少组件实例。")])]),e._v(" "),_("p",[e._v("实现原理：")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/v2/extend/keep-alive.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("keep-alive"),_("OutboundLink")],1)]),e._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/answershuto/learnVue/blob/master/docs/%E8%81%8A%E8%81%8Akeep-alive%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%85%B6%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.MarkDown",target:"_blank",rel:"noopener noreferrer"}},[e._v("聊聊keep-alive组件的使用及其实现原理"),_("OutboundLink")],1)])]),e._v(" "),_("h2",{attrs:{id:"父子组件钩子函数执行顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#父子组件钩子函数执行顺序"}},[e._v("#")]),e._v(" 父子组件钩子函数执行顺序")]),e._v(" "),_("p",[e._v("Vue 的父组件和子组件生命周期钩子函数执行顺序可以归类为以下 4 部分：")]),e._v(" "),_("ul",[_("li",[e._v("加载渲染过程")])]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeCreate")]),e._v(" -> 父 "),_("code",[e._v("created")]),e._v(" -> 父 "),_("code",[e._v("beforeMount")]),e._v(" -> 子 "),_("code",[e._v("beforeCreate")]),e._v(" -> 子 "),_("code",[e._v("created")]),e._v(" -> 子 "),_("code",[e._v("beforeMount")]),e._v(" -> 子 "),_("code",[e._v("mounted")]),e._v(" -> 父 "),_("code",[e._v("mounted")])]),e._v(" "),_("ul",[_("li",[e._v("子组件更新过程")])]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeUpdate")]),e._v(" -> 子 "),_("code",[e._v("beforeUpdate")]),e._v(" -> 子 "),_("code",[e._v("updated")]),e._v(" -> 父 "),_("code",[e._v("updated")])]),e._v(" "),_("ul",[_("li",[e._v("父组件更新过程")])]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeUpdate")]),e._v(" -> 父 "),_("code",[e._v("updated")])]),e._v(" "),_("ul",[_("li",[e._v("销毁过程")])]),e._v(" "),_("p",[e._v("父 "),_("code",[e._v("beforeDestroy")]),e._v(" -> 子 "),_("code",[e._v("beforeDestroy")]),e._v(" -> 子 "),_("code",[e._v("destroyed")]),e._v(" -> 父 "),_("code",[e._v("destroyed")])])])}),[],!1,null,null,null);v.default=a.exports}}]);