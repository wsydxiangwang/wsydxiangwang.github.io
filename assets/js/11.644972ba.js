(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{334:function(v,_,e){v.exports=e.p+"assets/img/http1.666d7d20.jpg"},335:function(v,_,e){v.exports=e.p+"assets/img/http2.1f6a5e17.jpg"},395:function(v,_,e){"use strict";e.r(_);var t=e(33),s=Object(t.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"tcp三次握手和四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp三次握手和四次挥手"}},[v._v("#")]),v._v(" TCP三次握手和四次挥手")]),v._v(" "),t("p",[v._v("建立TCP链接是为了保证稳定有序的收发数据，那么就要保证双方的"),t("code",[v._v("发送能力")]),v._v("和"),t("code",[v._v("接收能力")]),v._v("都是OK的。")]),v._v(" "),t("h2",{attrs:{id:"三次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[v._v("#")]),v._v(" 三次握手")]),v._v(" "),t("p",[v._v("三次握手之所以三次，是保证"),t("code",[v._v("client")]),v._v("和"),t("code",[v._v("server")]),v._v("都让 "),t("strong",[v._v('"对方"')]),v._v(" 知道自己发送和接收能力都OK的最小次数。")]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("client => server")]),v._v(" server判断出client具备发送能力")]),v._v(" "),t("p",[t("code",[v._v("server => client")]),v._v(" client可以判断出server具备发送和接受能力")]),v._v(" "),t("p",[t("code",[v._v("client => server")]),v._v(" client还需让server知道自己接收能力没问题,")])]),v._v(" "),t("ul",[t("li",[v._v("客户端：我准备好了，你准备好了么，收到请回答？")]),v._v(" "),t("li",[v._v("服务端：我收到了，我也准备好了，你收到了么？")]),v._v(" "),t("li",[v._v("客户端：我也收到了")])]),v._v(" "),t("p",[v._v("双方均保证了自己的接收和发送能力没有问题")]),v._v(" "),t("p",[v._v("TCP连接建立，两次无法保证，四次会多余，三次刚刚好。")]),v._v(" "),t("p",[t("img",{attrs:{src:e(334),alt:""}})]),v._v(" "),t("p",[v._v("从最开始双方都处于"),t("code",[v._v("CLOSED")]),v._v("状态。然后服务端开始监听某个端口，进入了"),t("code",[v._v("LISTEN")]),v._v("状态。")]),v._v(" "),t("ul",[t("li",[v._v("第一次握手")])]),v._v(" "),t("p",[v._v("客户端主动发起连接，发送 SYN , 发送完毕后，客户端进入"),t("code",[v._v("SYN-SENT")]),v._v("状态。")]),v._v(" "),t("ul",[t("li",[v._v("第二次握手")])]),v._v(" "),t("p",[v._v("服务端接收到，返回SYN和ACK(对应客户端发来的SYN)，发送完毕后，服务器端进入"),t("code",[v._v("SYN_RCVD")]),v._v("状态。")]),v._v(" "),t("ul",[t("li",[v._v("第三次握手")])]),v._v(" "),t("p",[v._v("客户端再发送ACK给服务端，发送完毕后，客户端进入"),t("code",[v._v("ESTABLISHED")]),v._v("状态；服务端收到ACK之后，也进入"),t("code",[v._v("ESTABLISHED")]),v._v("状态，TCP 握手结束。")]),v._v(" "),t("h2",{attrs:{id:"四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[v._v("#")]),v._v(" 四次挥手")]),v._v(" "),t("p",[t("img",{attrs:{src:e(335),alt:""}})]),v._v(" "),t("p",[v._v("刚开始双方处于"),t("code",[v._v("ESTABLISHED")]),v._v("状态。")]),v._v(" "),t("ul",[t("li",[v._v("第一次挥手")])]),v._v(" "),t("p",[v._v("客户端想要关闭连接，向服务器发送 FIN 报文，发送完毕后，客户端进入"),t("code",[v._v("FIN_WAIT_1")]),v._v("状态。")]),v._v(" "),t("p",[v._v("注意, 这时候客户端同时也变成了"),t("code",[v._v("half-close(半关闭)")]),v._v("状态，即无法向服务端发送报文，只能接收。")]),v._v(" "),t("ul",[t("li",[v._v("第二次挥手")])]),v._v(" "),t("p",[v._v("服务器端确认客户端的 FIN 包，发送一个确认包，表明自己接受到了客户端关闭连接的请求，但还没有准备好关闭连接。")]),v._v(" "),t("p",[v._v("发送完毕后，服务器端进入"),t("code",[v._v("CLOSED_WAIT")]),v._v("状态，客户端接收到这个确认包之后，进入"),t("code",[v._v("FIN_WAIT_2")]),v._v("状态，等待服务器端关闭连接。")]),v._v(" "),t("ul",[t("li",[v._v("第三次挥手")])]),v._v(" "),t("p",[v._v("服务器端准备好关闭连接时，向客户端发送结束连接请求，FIN 置为1。")]),v._v(" "),t("p",[v._v("发送完毕后，服务器端进入"),t("code",[v._v("LAST_ACK")]),v._v("状态，等待来自客户端的最后一个ACK。")]),v._v(" "),t("ul",[t("li",[v._v("第四次挥手")])]),v._v(" "),t("p",[v._v("客户端接收到来自服务器端的关闭请求，发送一个确认包，并进入"),t("code",[v._v("TIME_WAIT")]),v._v("状态，等待可能出现的要求重传的 ACK 包。")]),v._v(" "),t("p",[v._v("服务器端接收到这个确认包之后，关闭连接，进入"),t("code",[v._v("CLOSED")]),v._v("状态。")]),v._v(" "),t("p",[v._v("客户端等待了某个固定时间（两个最大段生命周期，2MSL，2 Maximum Segment Lifetime）之后，没有收到服务器端的 ACK ，认为服务器端已经正常关闭连接，于是自己也关闭连接，进入"),t("code",[v._v("CLOSED")]),v._v("状态。")]),v._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://hit-alibaba.github.io/interview/basic/network/TCP.html",alt:"TCP的三次握手与四次挥手"}})])])}),[],!1,null,null,null);_.default=s.exports}}]);