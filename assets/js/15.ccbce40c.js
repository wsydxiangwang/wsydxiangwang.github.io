(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{356:function(t,s,a){t.exports=a.p+"assets/img/1.d546fe32.png"},357:function(t,s,a){t.exports=a.p+"assets/img/2.2d954b93.png"},431:function(t,s,a){"use strict";a.r(s);var r=a(33),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("h2",{attrs:{id:"反转链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#反转链表"}},[t._v("#")]),t._v(" 反转链表")]),t._v(" "),r("p",[t._v("反转一个单链表。")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("输入"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v("\n输出"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v("\n")])])]),r("p",[t._v("解法一：迭代")]),t._v(" "),r("ul",[r("li",[t._v("时间复杂度: O(n)")]),t._v(" "),r("li",[t._v("空间复杂度: O(1)")])]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" key"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ListNode} head\n * @return {ListNode}\n */")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reverseList")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("head")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("head"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prev "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curr "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n        curr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prev\n        prev "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curr\n        curr "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next\n        "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [curr.next, prev, curr] = [prev, curr, curr.next]")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" prev\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("ul",[r("li",[t._v("设置哨兵节点 "),r("code",[t._v("null")]),t._v(", 初始化当前节点 "),r("code",[t._v("curr")]),t._v(" 为 "),r("code",[t._v("head")])]),t._v(" "),r("li",[t._v("将当前节点 "),r("code",[t._v("curr")]),t._v(" 的指针指向上一个节点 "),r("code",[t._v("prev")])]),t._v(" "),r("li",[t._v("更新上一个节点 "),r("code",[t._v("prev")]),t._v(" 为当前节点 "),r("code",[t._v("curr")])]),t._v(" "),r("li",[t._v("更新当前节点 "),r("code",[t._v("curr")]),t._v(" 为下一个节点 "),r("code",[t._v("next")])]),t._v(" "),r("li",[t._v("重复以上动作直到当前节点为尾节点的节点 "),r("code",[t._v("null")])])]),t._v(" "),r("p",[r("img",{attrs:{src:a(356),alt:""}})]),t._v(" "),r("p",[t._v("解法二: 尾递归")]),t._v(" "),r("p",[t._v("其实就是解法一的简化版")]),t._v(" "),r("ul",[r("li",[t._v("时间复杂度: O(n)")]),t._v(" "),r("li",[t._v("空间复杂度: O(1)")])]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reverseList")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("head")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reverse")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prev"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curr")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("curr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" prev\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" curr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n        curr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prev\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("curr"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" head"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[t._v("解法三: 递归")]),t._v(" "),r("p",[t._v("不断递归反转当前节点 "),r("code",[t._v("head")]),t._v(" 的后继节点 "),r("code",[t._v("next")])]),t._v(" "),r("ul",[r("li",[t._v("时间复杂度: O(n)")]),t._v(" "),r("li",[t._v("空间复杂度: O(n)")])]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reverseList")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("head")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("head "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("head"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" head\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归反转")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reverse "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverseList")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变更指针")]),t._v("\n    head"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    next"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" head\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reverse\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("ul",[r("li",[t._v("当前节点 "),r("code",[t._v("head")]),t._v("，下一个节点 "),r("code",[t._v("next")])]),t._v(" "),r("li",[t._v("将 "),r("code",[t._v("head")]),t._v(" 的指针断开，把 "),r("code",[t._v("head.next")]),t._v(" 指向 "),r("code",[t._v("head")]),t._v("，即是反转")]),t._v(" "),r("li",[t._v("由编译器函数调用执行栈原理可知，最先调用的函数会在递归过程中最后被执行，而最后调用的会最先执行")]),t._v(" "),r("li",[t._v("因此此题，最先返回最后两个节点开始反转操作，依次从后面两两节点开始反转")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(357),alt:""}})])])}),[],!1,null,null,null);s.default=e.exports}}]);